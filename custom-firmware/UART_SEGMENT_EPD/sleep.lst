                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.1 #12107 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module sleep
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _UART_TXE
                                     12 	.globl _UART_RXF
                                     13 	.globl _IEN_EA
                                     14 	.globl _IEN_RF2
                                     15 	.globl _IEN_RF1
                                     16 	.globl _IEN_TMR1
                                     17 	.globl _IEN_TMR0
                                     18 	.globl _IEN_UART0
                                     19 	.globl _P2_7
                                     20 	.globl _P2_6
                                     21 	.globl _P2_5
                                     22 	.globl _P2_4
                                     23 	.globl _P2_3
                                     24 	.globl _P2_2
                                     25 	.globl _P2_1
                                     26 	.globl _P2_0
                                     27 	.globl _P1_7
                                     28 	.globl _P1_6
                                     29 	.globl _P1_5
                                     30 	.globl _P1_4
                                     31 	.globl _P1_3
                                     32 	.globl _P1_2
                                     33 	.globl _P1_1
                                     34 	.globl _P1_0
                                     35 	.globl _P0_7
                                     36 	.globl _P0_6
                                     37 	.globl _P0_5
                                     38 	.globl _P0_4
                                     39 	.globl _P0_3
                                     40 	.globl _P0_2
                                     41 	.globl _P0_1
                                     42 	.globl _P0_0
                                     43 	.globl _CFGPAGE
                                     44 	.globl _TCON2
                                     45 	.globl _SETTINGS
                                     46 	.globl _TRIGGER
                                     47 	.globl _UNK_C1
                                     48 	.globl _RADIO_GOTLEN
                                     49 	.globl _RADIO_INITSEQ3
                                     50 	.globl _RADIO_RXLEN
                                     51 	.globl _RADIO_RXPTRH
                                     52 	.globl _RADIO_RXPTRL
                                     53 	.globl _RADIO_INITSEQ5
                                     54 	.globl _RADIO_INITSEQ4
                                     55 	.globl _RADIO_INITSEQ0
                                     56 	.globl _RADIO_TXLEN
                                     57 	.globl _RADIO_INITSEQ2
                                     58 	.globl _RADIO_INITSEQ1
                                     59 	.globl _RADIO_TXPTRH
                                     60 	.globl _RADIO_TXPTRL
                                     61 	.globl _TEMPCAL6
                                     62 	.globl _TEMPCAL5
                                     63 	.globl _TEMPCAL4
                                     64 	.globl _TEMPCAL3
                                     65 	.globl _TEMPRETL
                                     66 	.globl _TEMPRETH
                                     67 	.globl _TEMPCFG
                                     68 	.globl _TEMPCAL2
                                     69 	.globl _TEMPCAL1
                                     70 	.globl _FWRTHREE
                                     71 	.globl _FWRLENH
                                     72 	.globl _FWRLENL
                                     73 	.globl _FWRDSTH
                                     74 	.globl _FWRDSTL
                                     75 	.globl _FWRSRCH
                                     76 	.globl _FWRSRCL
                                     77 	.globl _FPGNO
                                     78 	.globl _T1
                                     79 	.globl _T0
                                     80 	.globl _TH1
                                     81 	.globl _TH0
                                     82 	.globl _TL1
                                     83 	.globl _TL0
                                     84 	.globl _TMOD
                                     85 	.globl _TCON
                                     86 	.globl _UARTBRGH
                                     87 	.globl _UARTBRGL
                                     88 	.globl _UARTBUF
                                     89 	.globl _UARTSTA
                                     90 	.globl _I2CUNKNOWN
                                     91 	.globl _I2CSPEED
                                     92 	.globl _I2CCTL
                                     93 	.globl _I2CBUF
                                     94 	.globl _I2CSTATE
                                     95 	.globl _SPIRX
                                     96 	.globl _SPITX
                                     97 	.globl _SPIENA
                                     98 	.globl _SPICFG
                                     99 	.globl _SPIUNKNOWN
                                    100 	.globl _WDTCONF
                                    101 	.globl _WDTRSTVALH
                                    102 	.globl _WDTRSTVALM
                                    103 	.globl _WDTRSTVALL
                                    104 	.globl _WDTPET
                                    105 	.globl _WDTENA
                                    106 	.globl _RESET
                                    107 	.globl _CLKEN
                                    108 	.globl _CLKSPEED
                                    109 	.globl _IEN1
                                    110 	.globl _IEN0
                                    111 	.globl _XPAGE
                                    112 	.globl _P2PULL
                                    113 	.globl _P1PULL
                                    114 	.globl _P0PULL
                                    115 	.globl _P2DIR
                                    116 	.globl _P1DIR
                                    117 	.globl _P0DIR
                                    118 	.globl _P2FUNC
                                    119 	.globl _P1FUNC
                                    120 	.globl _P0FUNC
                                    121 	.globl _P2CHSTA
                                    122 	.globl _P1CHSTA
                                    123 	.globl _P0CHSTA
                                    124 	.globl _P2INTEN
                                    125 	.globl _P1INTEN
                                    126 	.globl _P0INTEN
                                    127 	.globl _P2LVLSEL
                                    128 	.globl _P1LVLSEL
                                    129 	.globl _P0LVLSEL
                                    130 	.globl _P2
                                    131 	.globl _P1
                                    132 	.globl _P0
                                    133 	.globl _PERFMON4
                                    134 	.globl _PCL
                                    135 	.globl _PCH
                                    136 	.globl _PERFMON1
                                    137 	.globl _PERFMON0
                                    138 	.globl _PCON
                                    139 	.globl _DPS
                                    140 	.globl _DPH1
                                    141 	.globl _DPL1
                                    142 	.globl _DPH
                                    143 	.globl _DPL
                                    144 	.globl _ACC
                                    145 	.globl _B
                                    146 	.globl _sleepForMsec
                                    147 ;--------------------------------------------------------
                                    148 ; special function registers
                                    149 ;--------------------------------------------------------
                                    150 	.area RSEG    (ABS,DATA)
      000000                        151 	.org 0x0000
                           0000F0   152 _B	=	0x00f0
                           0000E0   153 _ACC	=	0x00e0
                           000082   154 _DPL	=	0x0082
                           000083   155 _DPH	=	0x0083
                           000084   156 _DPL1	=	0x0084
                           000085   157 _DPH1	=	0x0085
                           000092   158 _DPS	=	0x0092
                           000087   159 _PCON	=	0x0087
                           0000B2   160 _PERFMON0	=	0x00b2
                           0000B3   161 _PERFMON1	=	0x00b3
                           0000B4   162 _PCH	=	0x00b4
                           0000B5   163 _PCL	=	0x00b5
                           0000B6   164 _PERFMON4	=	0x00b6
                           000080   165 _P0	=	0x0080
                           000090   166 _P1	=	0x0090
                           0000A0   167 _P2	=	0x00a0
                           0000A3   168 _P0LVLSEL	=	0x00a3
                           0000A4   169 _P1LVLSEL	=	0x00a4
                           0000A5   170 _P2LVLSEL	=	0x00a5
                           0000A6   171 _P0INTEN	=	0x00a6
                           0000A7   172 _P1INTEN	=	0x00a7
                           0000A9   173 _P2INTEN	=	0x00a9
                           0000AA   174 _P0CHSTA	=	0x00aa
                           0000AB   175 _P1CHSTA	=	0x00ab
                           0000AC   176 _P2CHSTA	=	0x00ac
                           0000AD   177 _P0FUNC	=	0x00ad
                           0000AE   178 _P1FUNC	=	0x00ae
                           0000AF   179 _P2FUNC	=	0x00af
                           0000B9   180 _P0DIR	=	0x00b9
                           0000BA   181 _P1DIR	=	0x00ba
                           0000BB   182 _P2DIR	=	0x00bb
                           0000BC   183 _P0PULL	=	0x00bc
                           0000BD   184 _P1PULL	=	0x00bd
                           0000BE   185 _P2PULL	=	0x00be
                           0000A0   186 _XPAGE	=	0x00a0
                           0000A8   187 _IEN0	=	0x00a8
                           0000A1   188 _IEN1	=	0x00a1
                           00008E   189 _CLKSPEED	=	0x008e
                           0000B7   190 _CLKEN	=	0x00b7
                           00008F   191 _RESET	=	0x008f
                           0000BA   192 _WDTENA	=	0x00ba
                           0000BB   193 _WDTPET	=	0x00bb
                           0000BC   194 _WDTRSTVALL	=	0x00bc
                           0000BD   195 _WDTRSTVALM	=	0x00bd
                           0000BE   196 _WDTRSTVALH	=	0x00be
                           0000BF   197 _WDTCONF	=	0x00bf
                           0000EB   198 _SPIUNKNOWN	=	0x00eb
                           0000EC   199 _SPICFG	=	0x00ec
                           0000ED   200 _SPIENA	=	0x00ed
                           0000EE   201 _SPITX	=	0x00ee
                           0000EF   202 _SPIRX	=	0x00ef
                           000091   203 _I2CSTATE	=	0x0091
                           000094   204 _I2CBUF	=	0x0094
                           000095   205 _I2CCTL	=	0x0095
                           000096   206 _I2CSPEED	=	0x0096
                           0000A2   207 _I2CUNKNOWN	=	0x00a2
                           000098   208 _UARTSTA	=	0x0098
                           000099   209 _UARTBUF	=	0x0099
                           00009A   210 _UARTBRGL	=	0x009a
                           00009B   211 _UARTBRGH	=	0x009b
                           000088   212 _TCON	=	0x0088
                           000089   213 _TMOD	=	0x0089
                           00008A   214 _TL0	=	0x008a
                           00008B   215 _TL1	=	0x008b
                           00008C   216 _TH0	=	0x008c
                           00008D   217 _TH1	=	0x008d
                           008C8A   218 _T0	=	0x8c8a
                           008D8B   219 _T1	=	0x8d8b
                           0000D8   220 _FPGNO	=	0x00d8
                           0000D9   221 _FWRSRCL	=	0x00d9
                           0000DA   222 _FWRSRCH	=	0x00da
                           0000DB   223 _FWRDSTL	=	0x00db
                           0000DC   224 _FWRDSTH	=	0x00dc
                           0000DD   225 _FWRLENL	=	0x00dd
                           0000DE   226 _FWRLENH	=	0x00de
                           0000DF   227 _FWRTHREE	=	0x00df
                           0000E6   228 _TEMPCAL1	=	0x00e6
                           0000E7   229 _TEMPCAL2	=	0x00e7
                           0000F7   230 _TEMPCFG	=	0x00f7
                           0000F8   231 _TEMPRETH	=	0x00f8
                           0000F9   232 _TEMPRETL	=	0x00f9
                           0000FB   233 _TEMPCAL3	=	0x00fb
                           0000FC   234 _TEMPCAL4	=	0x00fc
                           0000FD   235 _TEMPCAL5	=	0x00fd
                           0000FE   236 _TEMPCAL6	=	0x00fe
                           0000C9   237 _RADIO_TXPTRL	=	0x00c9
                           0000CA   238 _RADIO_TXPTRH	=	0x00ca
                           0000CB   239 _RADIO_INITSEQ1	=	0x00cb
                           0000CC   240 _RADIO_INITSEQ2	=	0x00cc
                           0000CD   241 _RADIO_TXLEN	=	0x00cd
                           0000CE   242 _RADIO_INITSEQ0	=	0x00ce
                           0000D1   243 _RADIO_INITSEQ4	=	0x00d1
                           0000D2   244 _RADIO_INITSEQ5	=	0x00d2
                           0000D3   245 _RADIO_RXPTRL	=	0x00d3
                           0000D4   246 _RADIO_RXPTRH	=	0x00d4
                           0000D5   247 _RADIO_RXLEN	=	0x00d5
                           0000D6   248 _RADIO_INITSEQ3	=	0x00d6
                           0000FA   249 _RADIO_GOTLEN	=	0x00fa
                           0000C1   250 _UNK_C1	=	0x00c1
                           0000D7   251 _TRIGGER	=	0x00d7
                           0000C7   252 _SETTINGS	=	0x00c7
                           0000CF   253 _TCON2	=	0x00cf
                           0000FF   254 _CFGPAGE	=	0x00ff
                                    255 ;--------------------------------------------------------
                                    256 ; special function bits
                                    257 ;--------------------------------------------------------
                                    258 	.area RSEG    (ABS,DATA)
      000000                        259 	.org 0x0000
                           000080   260 _P0_0	=	0x0080
                           000081   261 _P0_1	=	0x0081
                           000082   262 _P0_2	=	0x0082
                           000083   263 _P0_3	=	0x0083
                           000084   264 _P0_4	=	0x0084
                           000085   265 _P0_5	=	0x0085
                           000086   266 _P0_6	=	0x0086
                           000087   267 _P0_7	=	0x0087
                           000090   268 _P1_0	=	0x0090
                           000091   269 _P1_1	=	0x0091
                           000092   270 _P1_2	=	0x0092
                           000093   271 _P1_3	=	0x0093
                           000094   272 _P1_4	=	0x0094
                           000095   273 _P1_5	=	0x0095
                           000096   274 _P1_6	=	0x0096
                           000097   275 _P1_7	=	0x0097
                           0000A0   276 _P2_0	=	0x00a0
                           0000A1   277 _P2_1	=	0x00a1
                           0000A2   278 _P2_2	=	0x00a2
                           0000A3   279 _P2_3	=	0x00a3
                           0000A4   280 _P2_4	=	0x00a4
                           0000A5   281 _P2_5	=	0x00a5
                           0000A6   282 _P2_6	=	0x00a6
                           0000A7   283 _P2_7	=	0x00a7
                           0000A8   284 _IEN_UART0	=	0x00a8
                           0000A9   285 _IEN_TMR0	=	0x00a9
                           0000AB   286 _IEN_TMR1	=	0x00ab
                           0000AC   287 _IEN_RF1	=	0x00ac
                           0000AD   288 _IEN_RF2	=	0x00ad
                           0000AF   289 _IEN_EA	=	0x00af
                           000098   290 _UART_RXF	=	0x0098
                           000099   291 _UART_TXE	=	0x0099
                                    292 ;--------------------------------------------------------
                                    293 ; overlayable register banks
                                    294 ;--------------------------------------------------------
                                    295 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        296 	.ds 8
                                    297 ;--------------------------------------------------------
                                    298 ; internal ram data
                                    299 ;--------------------------------------------------------
                                    300 	.area DSEG    (DATA)
                                    301 ;--------------------------------------------------------
                                    302 ; overlayable items in internal ram 
                                    303 ;--------------------------------------------------------
                                    304 ;--------------------------------------------------------
                                    305 ; indirectly addressable internal ram data
                                    306 ;--------------------------------------------------------
                                    307 	.area ISEG    (DATA)
                           000000   308 _R0	=	0x0000
                           000001   309 _R1	=	0x0001
                           000002   310 _R2	=	0x0002
                           000003   311 _R3	=	0x0003
                           000004   312 _R4	=	0x0004
                           000005   313 _R5	=	0x0005
                           000006   314 _R6	=	0x0006
                           000007   315 _R7	=	0x0007
                                    316 ;--------------------------------------------------------
                                    317 ; absolute internal ram data
                                    318 ;--------------------------------------------------------
                                    319 	.area IABS    (ABS,DATA)
                                    320 	.area IABS    (ABS,DATA)
                                    321 ;--------------------------------------------------------
                                    322 ; bit data
                                    323 ;--------------------------------------------------------
                                    324 	.area BSEG    (BIT)
      000000                        325 _sleepForMsec_irqEn_65536_3:
      000000                        326 	.ds 1
                                    327 ;--------------------------------------------------------
                                    328 ; paged external ram data
                                    329 ;--------------------------------------------------------
                                    330 	.area PSEG    (PAG,XDATA)
                                    331 ;--------------------------------------------------------
                                    332 ; external ram data
                                    333 ;--------------------------------------------------------
                                    334 	.area XSEG    (XDATA)
                           00DF48   335 _RADIO_command	=	0xdf48
                           00DF70   336 _RADIO_calibration_70	=	0xdf70
                           00DF71   337 _RADIO_calibration_71	=	0xdf71
                           00DF80   338 _RADIO_FLAGS	=	0xdf80
                           00DF81   339 _RADIO_calibration_81	=	0xdf81
                           00DF83   340 _RADIO_unk_83	=	0xdf83
                           00DF84   341 _RADIO_currentRSSI	=	0xdf84
                           00DF86   342 _RADIO_calibration_86	=	0xdf86
                           00DF88   343 _RADIO_ownMac_7	=	0xdf88
                           00DF89   344 _RADIO_ownMac_6	=	0xdf89
                           00DF8A   345 _RADIO_ownMac_5	=	0xdf8a
                           00DF8B   346 _RADIO_ownMac_4	=	0xdf8b
                           00DF8C   347 _RADIO_ownMac_3	=	0xdf8c
                           00DF8D   348 _RADIO_ownMac_2	=	0xdf8d
                           00DF8E   349 _RADIO_ownMac_1	=	0xdf8e
                           00DF8F   350 _RADIO_ownMac_0	=	0xdf8f
                           00DF90   351 _RADIO_PANID_Hi	=	0xdf90
                           00DF91   352 _RADIO_PANID_Lo	=	0xdf91
                           00DF92   353 _RADIO_ownShortAddress_Hi	=	0xdf92
                           00DF93   354 _RADIO_ownShortAddress_Lo	=	0xdf93
                           00DF94   355 _RADIO_calibration_94	=	0xdf94
                           00DF95   356 _RADIO_calibration_95	=	0xdf95
                           00DF96   357 _RADIO_calibration_96	=	0xdf96
                           00DF98   358 _RADIO_rxFirstByte	=	0xdf98
                           00DF9B   359 _RADIO_curRfState	=	0xdf9b
                           00DF9D   360 _RADIO_calibration_9D	=	0xdf9d
                           00DFA1   361 _RADIO_calibration_A1	=	0xdfa1
                           00DFA5   362 _RADIO_unk_rxAckSta	=	0xdfa5
                           00DFA6   363 _RADIO_unk_A6	=	0xdfa6
                           00DFAD   364 _RADIO_IRQ4_pending	=	0xdfad
                           00DFAF   365 _RADIO_unk_AF	=	0xdfaf
                           00DFC0   366 _RADIO_channel	=	0xdfc0
                           00DFC1   367 _RADIO_unk_C1	=	0xdfc1
                           00DFC2   368 _RADIO_calibration_C2	=	0xdfc2
                           00DFC3   369 _RADIO_calibration_C3	=	0xdfc3
                           00DFC4   370 _RADIO_calibration_C4	=	0xdfc4
                           00DFC5   371 _RADIO_calibration_C5	=	0xdfc5
                           00DFC6   372 _RADIO_calibration_C6	=	0xdfc6
                           00DFC7   373 _RADIO_calibration_C7	=	0xdfc7
                           00DFC8   374 _RADIO_unk_C8	=	0xdfc8
                           00DFC9   375 _RADIO_txPower	=	0xdfc9
                           00DFCA   376 _RADIO_unk_CA	=	0xdfca
                           00DFCB   377 _RADIO_perChannelSetting2	=	0xdfcb
                           00DFCD   378 _RADIO_unk_CD	=	0xdfcd
                           00DFCE   379 _RADIO_unk_CE	=	0xdfce
                           00DFCF   380 _RADIO_calibration_CF	=	0xdfcf
                           00DFD0   381 _RADIO_calibration_D0	=	0xdfd0
                           00DFD1   382 _RADIO_calibration_D1	=	0xdfd1
                           00DFD2   383 _RADIO_calibration_D2	=	0xdfd2
                           00DFD3   384 _RADIO_calibration_D3	=	0xdfd3
                           00DFD4   385 _RADIO_calibration_D4	=	0xdfd4
                           00DFD5   386 _RADIO_calibration_D5	=	0xdfd5
                           00DFD7   387 _RADIO_unk_D7	=	0xdfd7
                           00DFD8   388 _RADIO_unk_D8	=	0xdfd8
                           00DFD9   389 _RADIO_SleepTimerHi	=	0xdfd9
                           00DFDA   390 _RADIO_SleepTimerMid	=	0xdfda
                           00DFDB   391 _RADIO_SleepTimerLo	=	0xdfdb
                           00DFE2   392 _RADIO_unk_E2	=	0xdfe2
                           00DFF0   393 _RADIO_unk_F0	=	0xdff0
                           00DFF3   394 _RADIO_SleepTimerSettings	=	0xdff3
                           00DFF4   395 _RADIO_RadioPowerCtl	=	0xdff4
                           00DFFD   396 _RADIO_perChannelSetting1	=	0xdffd
      000000                        397 _sleepForMsec_length_65536_2:
      000000                        398 	.ds 4
      000004                        399 _sleepForMsec_prescaler_65536_3:
      000004                        400 	.ds 1
      000005                        401 _sleepForMsec_cfgPg_65536_3:
      000005                        402 	.ds 1
                                    403 ;--------------------------------------------------------
                                    404 ; absolute external ram data
                                    405 ;--------------------------------------------------------
                                    406 	.area XABS    (ABS,XDATA)
                                    407 ;--------------------------------------------------------
                                    408 ; external initialized ram data
                                    409 ;--------------------------------------------------------
                                    410 	.area XISEG   (XDATA)
                                    411 	.area HOME    (CODE)
                                    412 	.area GSINIT0 (CODE)
                                    413 	.area GSINIT1 (CODE)
                                    414 	.area GSINIT2 (CODE)
                                    415 	.area GSINIT3 (CODE)
                                    416 	.area GSINIT4 (CODE)
                                    417 	.area GSINIT5 (CODE)
                                    418 	.area GSINIT  (CODE)
                                    419 	.area GSFINAL (CODE)
                                    420 	.area CSEG    (CODE)
                                    421 ;--------------------------------------------------------
                                    422 ; global & static initialisations
                                    423 ;--------------------------------------------------------
                                    424 	.area HOME    (CODE)
                                    425 	.area GSINIT  (CODE)
                                    426 	.area GSFINAL (CODE)
                                    427 	.area GSINIT  (CODE)
                                    428 ;--------------------------------------------------------
                                    429 ; Home
                                    430 ;--------------------------------------------------------
                                    431 	.area HOME    (CODE)
                                    432 	.area HOME    (CODE)
                                    433 ;--------------------------------------------------------
                                    434 ; code
                                    435 ;--------------------------------------------------------
                                    436 	.area CSEG    (CODE)
                                    437 ;------------------------------------------------------------
                                    438 ;Allocation info for local variables in function 'sleepForMsec'
                                    439 ;------------------------------------------------------------
                                    440 ;length                    Allocated with name '_sleepForMsec_length_65536_2'
                                    441 ;prescaler                 Allocated with name '_sleepForMsec_prescaler_65536_3'
                                    442 ;cfgPg                     Allocated with name '_sleepForMsec_cfgPg_65536_3'
                                    443 ;------------------------------------------------------------
                                    444 ;	sleep.c:4: void sleepForMsec(uint32_t length)
                                    445 ;	-----------------------------------------
                                    446 ;	 function sleepForMsec
                                    447 ;	-----------------------------------------
      000000                        448 _sleepForMsec:
                           000007   449 	ar7 = 0x07
                           000006   450 	ar6 = 0x06
                           000005   451 	ar5 = 0x05
                           000004   452 	ar4 = 0x04
                           000003   453 	ar3 = 0x03
                           000002   454 	ar2 = 0x02
                           000001   455 	ar1 = 0x01
                           000000   456 	ar0 = 0x00
      000000 AF 82            [24]  457 	mov	r7,dpl
      000002 AE 83            [24]  458 	mov	r6,dph
      000004 AD F0            [24]  459 	mov	r5,b
      000006 FC               [12]  460 	mov	r4,a
      000007 90r00r00         [24]  461 	mov	dptr,#_sleepForMsec_length_65536_2
      00000A EF               [12]  462 	mov	a,r7
      00000B F0               [24]  463 	movx	@dptr,a
      00000C EE               [12]  464 	mov	a,r6
      00000D A3               [24]  465 	inc	dptr
      00000E F0               [24]  466 	movx	@dptr,a
      00000F ED               [12]  467 	mov	a,r5
      000010 A3               [24]  468 	inc	dptr
      000011 F0               [24]  469 	movx	@dptr,a
      000012 EC               [12]  470 	mov	a,r4
      000013 A3               [24]  471 	inc	dptr
      000014 F0               [24]  472 	movx	@dptr,a
                                    473 ;	sleep.c:6: __bit irqEn = IEN_EA;
                                    474 ;	assignBit
      000015 A2 AF            [12]  475 	mov	c,_IEN_EA
      000017 92*00            [24]  476 	mov	_sleepForMsec_irqEn_65536_3,c
                                    477 ;	sleep.c:8: IEN_EA = 0;
                                    478 ;	assignBit
      000019 C2 AF            [12]  479 	clr	_IEN_EA
                                    480 ;	sleep.c:10: if (!length)
      00001B 90r00r00         [24]  481 	mov	dptr,#_sleepForMsec_length_65536_2
      00001E E0               [24]  482 	movx	a,@dptr
      00001F F5 F0            [12]  483 	mov	b,a
      000021 A3               [24]  484 	inc	dptr
      000022 E0               [24]  485 	movx	a,@dptr
      000023 42 F0            [12]  486 	orl	b,a
      000025 A3               [24]  487 	inc	dptr
      000026 E0               [24]  488 	movx	a,@dptr
      000027 42 F0            [12]  489 	orl	b,a
      000029 A3               [24]  490 	inc	dptr
      00002A E0               [24]  491 	movx	a,@dptr
      00002B 45 F0            [12]  492 	orl	a,b
      00002D 70 0C            [24]  493 	jnz	00102$
                                    494 ;	sleep.c:11: length = 0xfffffffful;
      00002F 90r00r00         [24]  495 	mov	dptr,#_sleepForMsec_length_65536_2
      000032 74 FF            [12]  496 	mov	a,#0xff
      000034 F0               [24]  497 	movx	@dptr,a
      000035 A3               [24]  498 	inc	dptr
      000036 F0               [24]  499 	movx	@dptr,a
      000037 A3               [24]  500 	inc	dptr
      000038 F0               [24]  501 	movx	@dptr,a
      000039 A3               [24]  502 	inc	dptr
      00003A F0               [24]  503 	movx	@dptr,a
      00003B                        504 00102$:
                                    505 ;	sleep.c:13: RADIO_IRQ4_pending = 0;
      00003B 90 DF AD         [24]  506 	mov	dptr,#_RADIO_IRQ4_pending
      00003E E4               [12]  507 	clr	a
      00003F F0               [24]  508 	movx	@dptr,a
                                    509 ;	sleep.c:14: UNK_C1 &=~ 0x81;
      000040 53 C1 7E         [24]  510 	anl	_UNK_C1,#0x7e
                                    511 ;	sleep.c:15: TCON &=~ 0x20;
      000043 53 88 DF         [24]  512 	anl	_TCON,#0xdf
                                    513 ;	sleep.c:16: cfgPg = CFGPAGE;
      000046 90r00r05         [24]  514 	mov	dptr,#_sleepForMsec_cfgPg_65536_3
      000049 E5 FF            [12]  515 	mov	a,_CFGPAGE
      00004B F0               [24]  516 	movx	@dptr,a
                                    517 ;	sleep.c:17: CFGPAGE = 4;
      00004C 75 FF 04         [24]  518 	mov	_CFGPAGE,#0x04
                                    519 ;	sleep.c:18: RADIO_command = 0xCA;
      00004F 90 DF 48         [24]  520 	mov	dptr,#_RADIO_command
      000052 74 CA            [12]  521 	mov	a,#0xca
      000054 F0               [24]  522 	movx	@dptr,a
                                    523 ;	sleep.c:19: RADIO_command = 0xC5;
      000055 74 C5            [12]  524 	mov	a,#0xc5
      000057 F0               [24]  525 	movx	@dptr,a
                                    526 ;	sleep.c:21: if (length <= 0x00008000ul) {
      000058 90r00r00         [24]  527 	mov	dptr,#_sleepForMsec_length_65536_2
      00005B E0               [24]  528 	movx	a,@dptr
      00005C FC               [12]  529 	mov	r4,a
      00005D A3               [24]  530 	inc	dptr
      00005E E0               [24]  531 	movx	a,@dptr
      00005F FD               [12]  532 	mov	r5,a
      000060 A3               [24]  533 	inc	dptr
      000061 E0               [24]  534 	movx	a,@dptr
      000062 FE               [12]  535 	mov	r6,a
      000063 A3               [24]  536 	inc	dptr
      000064 E0               [24]  537 	movx	a,@dptr
      000065 FF               [12]  538 	mov	r7,a
      000066 C3               [12]  539 	clr	c
      000067 E4               [12]  540 	clr	a
      000068 9C               [12]  541 	subb	a,r4
      000069 74 80            [12]  542 	mov	a,#0x80
      00006B 9D               [12]  543 	subb	a,r5
      00006C E4               [12]  544 	clr	a
      00006D 9E               [12]  545 	subb	a,r6
      00006E E4               [12]  546 	clr	a
      00006F 9F               [12]  547 	subb	a,r7
      000070 40 41            [24]  548 	jc	00106$
                                    549 ;	sleep.c:23: length <<= 5;
      000072 8E 02            [24]  550 	mov	ar2,r6
      000074 EF               [12]  551 	mov	a,r7
      000075 C4               [12]  552 	swap	a
      000076 23               [12]  553 	rl	a
      000077 54 E0            [12]  554 	anl	a,#0xe0
      000079 CA               [12]  555 	xch	a,r2
      00007A C4               [12]  556 	swap	a
      00007B 23               [12]  557 	rl	a
      00007C CA               [12]  558 	xch	a,r2
      00007D 6A               [12]  559 	xrl	a,r2
      00007E CA               [12]  560 	xch	a,r2
      00007F 54 E0            [12]  561 	anl	a,#0xe0
      000081 CA               [12]  562 	xch	a,r2
      000082 6A               [12]  563 	xrl	a,r2
      000083 FB               [12]  564 	mov	r3,a
      000084 ED               [12]  565 	mov	a,r5
      000085 C4               [12]  566 	swap	a
      000086 23               [12]  567 	rl	a
      000087 54 1F            [12]  568 	anl	a,#0x1f
      000089 4A               [12]  569 	orl	a,r2
      00008A FA               [12]  570 	mov	r2,a
      00008B 8C 00            [24]  571 	mov	ar0,r4
      00008D ED               [12]  572 	mov	a,r5
      00008E C4               [12]  573 	swap	a
      00008F 23               [12]  574 	rl	a
      000090 54 E0            [12]  575 	anl	a,#0xe0
      000092 C8               [12]  576 	xch	a,r0
      000093 C4               [12]  577 	swap	a
      000094 23               [12]  578 	rl	a
      000095 C8               [12]  579 	xch	a,r0
      000096 68               [12]  580 	xrl	a,r0
      000097 C8               [12]  581 	xch	a,r0
      000098 54 E0            [12]  582 	anl	a,#0xe0
      00009A C8               [12]  583 	xch	a,r0
      00009B 68               [12]  584 	xrl	a,r0
      00009C F9               [12]  585 	mov	r1,a
      00009D 90r00r00         [24]  586 	mov	dptr,#_sleepForMsec_length_65536_2
      0000A0 E8               [12]  587 	mov	a,r0
      0000A1 F0               [24]  588 	movx	@dptr,a
      0000A2 E9               [12]  589 	mov	a,r1
      0000A3 A3               [24]  590 	inc	dptr
      0000A4 F0               [24]  591 	movx	@dptr,a
      0000A5 EA               [12]  592 	mov	a,r2
      0000A6 A3               [24]  593 	inc	dptr
      0000A7 F0               [24]  594 	movx	@dptr,a
      0000A8 EB               [12]  595 	mov	a,r3
      0000A9 A3               [24]  596 	inc	dptr
      0000AA F0               [24]  597 	movx	@dptr,a
                                    598 ;	sleep.c:24: prescaler = 0x56;		//0x56 = one tick is 1/32k of sec
      0000AB 90r00r04         [24]  599 	mov	dptr,#_sleepForMsec_prescaler_65536_3
      0000AE 74 56            [12]  600 	mov	a,#0x56
      0000B0 F0               [24]  601 	movx	@dptr,a
      0000B1 80 64            [24]  602 	sjmp	00107$
      0000B3                        603 00106$:
                                    604 ;	sleep.c:27: if (length != 0xfffffffful)
      0000B3 BC FF 0B         [24]  605 	cjne	r4,#0xff,00142$
      0000B6 BD FF 08         [24]  606 	cjne	r5,#0xff,00142$
      0000B9 BE FF 05         [24]  607 	cjne	r6,#0xff,00142$
      0000BC BF FF 02         [24]  608 	cjne	r7,#0xff,00142$
      0000BF 80 14            [24]  609 	sjmp	00104$
      0000C1                        610 00142$:
                                    611 ;	sleep.c:28: length += 500;
      0000C1 90r00r00         [24]  612 	mov	dptr,#_sleepForMsec_length_65536_2
      0000C4 74 F4            [12]  613 	mov	a,#0xf4
      0000C6 2C               [12]  614 	add	a,r4
      0000C7 F0               [24]  615 	movx	@dptr,a
      0000C8 74 01            [12]  616 	mov	a,#0x01
      0000CA 3D               [12]  617 	addc	a,r5
      0000CB A3               [24]  618 	inc	dptr
      0000CC F0               [24]  619 	movx	@dptr,a
      0000CD E4               [12]  620 	clr	a
      0000CE 3E               [12]  621 	addc	a,r6
      0000CF A3               [24]  622 	inc	dptr
      0000D0 F0               [24]  623 	movx	@dptr,a
      0000D1 E4               [12]  624 	clr	a
      0000D2 3F               [12]  625 	addc	a,r7
      0000D3 A3               [24]  626 	inc	dptr
      0000D4 F0               [24]  627 	movx	@dptr,a
      0000D5                        628 00104$:
                                    629 ;	sleep.c:30: length /= 1000;
      0000D5 90r00r00         [24]  630 	mov	dptr,#_sleepForMsec_length_65536_2
      0000D8 E0               [24]  631 	movx	a,@dptr
      0000D9 FC               [12]  632 	mov	r4,a
      0000DA A3               [24]  633 	inc	dptr
      0000DB E0               [24]  634 	movx	a,@dptr
      0000DC FD               [12]  635 	mov	r5,a
      0000DD A3               [24]  636 	inc	dptr
      0000DE E0               [24]  637 	movx	a,@dptr
      0000DF FE               [12]  638 	mov	r6,a
      0000E0 A3               [24]  639 	inc	dptr
      0000E1 E0               [24]  640 	movx	a,@dptr
      0000E2 FF               [12]  641 	mov	r7,a
      0000E3 90r00r00         [24]  642 	mov	dptr,#__divulong_PARM_2
      0000E6 74 E8            [12]  643 	mov	a,#0xe8
      0000E8 F0               [24]  644 	movx	@dptr,a
      0000E9 74 03            [12]  645 	mov	a,#0x03
      0000EB A3               [24]  646 	inc	dptr
      0000EC F0               [24]  647 	movx	@dptr,a
      0000ED E4               [12]  648 	clr	a
      0000EE A3               [24]  649 	inc	dptr
      0000EF F0               [24]  650 	movx	@dptr,a
      0000F0 A3               [24]  651 	inc	dptr
      0000F1 F0               [24]  652 	movx	@dptr,a
      0000F2 8C 82            [24]  653 	mov	dpl,r4
      0000F4 8D 83            [24]  654 	mov	dph,r5
      0000F6 8E F0            [24]  655 	mov	b,r6
      0000F8 EF               [12]  656 	mov	a,r7
      0000F9 12r00r00         [24]  657 	lcall	__divulong
      0000FC AC 82            [24]  658 	mov	r4,dpl
      0000FE AD 83            [24]  659 	mov	r5,dph
      000100 AE F0            [24]  660 	mov	r6,b
      000102 FF               [12]  661 	mov	r7,a
      000103 90r00r00         [24]  662 	mov	dptr,#_sleepForMsec_length_65536_2
      000106 EC               [12]  663 	mov	a,r4
      000107 F0               [24]  664 	movx	@dptr,a
      000108 ED               [12]  665 	mov	a,r5
      000109 A3               [24]  666 	inc	dptr
      00010A F0               [24]  667 	movx	@dptr,a
      00010B EE               [12]  668 	mov	a,r6
      00010C A3               [24]  669 	inc	dptr
      00010D F0               [24]  670 	movx	@dptr,a
      00010E EF               [12]  671 	mov	a,r7
      00010F A3               [24]  672 	inc	dptr
      000110 F0               [24]  673 	movx	@dptr,a
                                    674 ;	sleep.c:31: prescaler = 0x16;		//0x16 = one tick is 1 second
      000111 90r00r04         [24]  675 	mov	dptr,#_sleepForMsec_prescaler_65536_3
      000114 74 16            [12]  676 	mov	a,#0x16
      000116 F0               [24]  677 	movx	@dptr,a
      000117                        678 00107$:
                                    679 ;	sleep.c:34: if (length > 0x000fffff) {
      000117 90r00r00         [24]  680 	mov	dptr,#_sleepForMsec_length_65536_2
      00011A E0               [24]  681 	movx	a,@dptr
      00011B FC               [12]  682 	mov	r4,a
      00011C A3               [24]  683 	inc	dptr
      00011D E0               [24]  684 	movx	a,@dptr
      00011E FD               [12]  685 	mov	r5,a
      00011F A3               [24]  686 	inc	dptr
      000120 E0               [24]  687 	movx	a,@dptr
      000121 FE               [12]  688 	mov	r6,a
      000122 A3               [24]  689 	inc	dptr
      000123 E0               [24]  690 	movx	a,@dptr
      000124 FF               [12]  691 	mov	r7,a
      000125 C3               [12]  692 	clr	c
      000126 74 FF            [12]  693 	mov	a,#0xff
      000128 9C               [12]  694 	subb	a,r4
      000129 74 FF            [12]  695 	mov	a,#0xff
      00012B 9D               [12]  696 	subb	a,r5
      00012C 74 0F            [12]  697 	mov	a,#0x0f
      00012E 9E               [12]  698 	subb	a,r6
      00012F E4               [12]  699 	clr	a
      000130 9F               [12]  700 	subb	a,r7
      000131 50 12            [24]  701 	jnc	00109$
                                    702 ;	sleep.c:36: RADIO_SleepTimerLo = 0xff;
      000133 90 DF DB         [24]  703 	mov	dptr,#_RADIO_SleepTimerLo
      000136 74 FF            [12]  704 	mov	a,#0xff
      000138 F0               [24]  705 	movx	@dptr,a
                                    706 ;	sleep.c:37: RADIO_SleepTimerMid = 0xff;
      000139 90 DF DA         [24]  707 	mov	dptr,#_RADIO_SleepTimerMid
      00013C F0               [24]  708 	movx	@dptr,a
                                    709 ;	sleep.c:38: RADIO_SleepTimerHi = 0x0f;
      00013D 90 DF D9         [24]  710 	mov	dptr,#_RADIO_SleepTimerHi
      000140 74 0F            [12]  711 	mov	a,#0x0f
      000142 F0               [24]  712 	movx	@dptr,a
      000143 80 13            [24]  713 	sjmp	00110$
      000145                        714 00109$:
                                    715 ;	sleep.c:42: RADIO_SleepTimerLo = length;
      000145 90 DF DB         [24]  716 	mov	dptr,#_RADIO_SleepTimerLo
      000148 EC               [12]  717 	mov	a,r4
      000149 F0               [24]  718 	movx	@dptr,a
                                    719 ;	sleep.c:43: RADIO_SleepTimerMid = length >> 8;
      00014A 90 DF DA         [24]  720 	mov	dptr,#_RADIO_SleepTimerMid
      00014D ED               [12]  721 	mov	a,r5
      00014E F0               [24]  722 	movx	@dptr,a
                                    723 ;	sleep.c:44: RADIO_SleepTimerHi = ((uint8_t)(length >> 16)) & 0x0f;
      00014F 8E 04            [24]  724 	mov	ar4,r6
      000151 90 DF D9         [24]  725 	mov	dptr,#_RADIO_SleepTimerHi
      000154 74 0F            [12]  726 	mov	a,#0x0f
      000156 5C               [12]  727 	anl	a,r4
      000157 F0               [24]  728 	movx	@dptr,a
      000158                        729 00110$:
                                    730 ;	sleep.c:47: __asm__("nop");
      000158 00               [12]  731 	nop
                                    732 ;	sleep.c:48: RADIO_SleepTimerSettings = prescaler;
      000159 90r00r04         [24]  733 	mov	dptr,#_sleepForMsec_prescaler_65536_3
      00015C E0               [24]  734 	movx	a,@dptr
      00015D 90 DF F3         [24]  735 	mov	dptr,#_RADIO_SleepTimerSettings
      000160 F0               [24]  736 	movx	@dptr,a
                                    737 ;	sleep.c:49: __asm__("nop\nnop\nnop\nnop\n");
      000161 00               [12]  738 	nop
      000162 00               [12]  739 	nop
      000163 00               [12]  740 	nop
      000164 00               [12]  741 	nop
                                    742 ;	sleep.c:50: RADIO_SleepTimerSettings |= 0x80;
      000165 90 DF F3         [24]  743 	mov	dptr,#_RADIO_SleepTimerSettings
      000168 E0               [24]  744 	movx	a,@dptr
      000169 43 E0 80         [24]  745 	orl	acc,#0x80
      00016C F0               [24]  746 	movx	@dptr,a
                                    747 ;	sleep.c:51: __asm__("nop\nnop\n");
      00016D 00               [12]  748 	nop
      00016E 00               [12]  749 	nop
                                    750 ;	sleep.c:52: RADIO_RadioPowerCtl = 0x44;
      00016F 90 DF F4         [24]  751 	mov	dptr,#_RADIO_RadioPowerCtl
      000172 74 44            [12]  752 	mov	a,#0x44
      000174 F0               [24]  753 	movx	@dptr,a
                                    754 ;	sleep.c:53: __asm__("nop\nnop\n");
      000175 00               [12]  755 	nop
      000176 00               [12]  756 	nop
                                    757 ;	sleep.c:55: CFGPAGE = cfgPg;
      000177 90r00r05         [24]  758 	mov	dptr,#_sleepForMsec_cfgPg_65536_3
      00017A E0               [24]  759 	movx	a,@dptr
      00017B F5 FF            [12]  760 	mov	_CFGPAGE,a
                                    761 ;	sleep.c:58: TL0 = 0x0;
      00017D 75 8A 00         [24]  762 	mov	_TL0,#0x00
                                    763 ;	sleep.c:59: TH0 = 0xFF;
      000180 75 8C FF         [24]  764 	mov	_TH0,#0xff
                                    765 ;	sleep.c:60: while (TH0 == 0xFF);
      000183                        766 00111$:
      000183 74 FF            [12]  767 	mov	a,#0xff
      000185 B5 8C 02         [24]  768 	cjne	a,_TH0,00144$
      000188 80 F9            [24]  769 	sjmp	00111$
      00018A                        770 00144$:
                                    771 ;	sleep.c:62: UNK_C1 |= 0x81;
      00018A 43 C1 81         [24]  772 	orl	_UNK_C1,#0x81
                                    773 ;	sleep.c:63: TCON |= 0x20;
      00018D 43 88 20         [24]  774 	orl	_TCON,#0x20
                                    775 ;	sleep.c:65: IEN_EA = irqEn;
                                    776 ;	assignBit
      000190 A2*00            [12]  777 	mov	c,_sleepForMsec_irqEn_65536_3
      000192 92 AF            [24]  778 	mov	_IEN_EA,c
                                    779 ;	sleep.c:66: }
      000194 22               [24]  780 	ret
                                    781 	.area CSEG    (CODE)
                                    782 	.area CONST   (CODE)
                                    783 	.area XINIT   (CODE)
                                    784 	.area CABS    (ABS,CODE)
